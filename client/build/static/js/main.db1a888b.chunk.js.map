{"version":3,"sources":["components/Navbar.tsx","hooks/useGetWars.ts","components/LoadingIcon.tsx","utils/dateToString.ts","components/WarCard.tsx","components/WarList.tsx","pages/home.tsx","components/Button.tsx","components/Input.tsx","components/FormGroup.tsx","components/Players.tsx","components/Roaster.tsx","components/RoasterText.tsx","hooks/useGetPlayers.ts","hooks/useGetWar.ts","pages/war.tsx","App.tsx","index.tsx"],"names":["Navbar","className","to","getWars","a","ky","get","json","LoadingIcon","dateToString","date","isNaN","getTime","getMonth","getDate","String","getHours","padStart","getMinutes","War","war","id","opponent","Date","spin_time","WarList","showLoadingSpinner","useQuery","data","isLoading","map","WarCard","Home","SIZE_MAPS","lg","md","sm","COLOR_MAPS","violet","gray","rose","Button","forwardRef","props","ref","color","size","attrs","children","Input","register","rest","FormGroup","isEditMode","label","currentValue","TH_COLORS","Players","townHall","players","useContext","context","roasterTags","setRoasterTags","isInRoaster","tag","includes","selected","filter","p","length","onChange","event","target","value","prev","next","idx","indexOf","splice","push","open","Panel","as","player","name","type","checked","Roaster","townHalls","roaster","th","memo","RoasterText","Object","keys","key","parseInt","sort","b","getPlayers","getWar","currentDate","toISOString","split","slice","createContext","useParams","history","useHistory","useGetWar","useForm","handleSubmit","useState","setIsEditMode","isDialogOpen","setIsDialogOpen","cancelBtnRef","useRef","useEffect","onSubmit","useCallback","values","alert","put","post","go","useMemo","deleteWar","delete","isError","Provider","onClick","onClose","initialFocus","Overlay","Title","defaultValue","required","min","reduce","obj","playerDetails","client","QueryClient","App","QueryClientProvider","exact","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.db1a888b.chunk.js","sourcesContent":["import { Link } from 'react-router-dom'\n\nconst Navbar = () => {\n  return (\n    <nav className='full-width bg-gray-800 py-3 px-5 lg:py-4 lg:px-6'>\n      <Link to='/' className='font-extrabold text-xl lg:text-2xl'>\n        Idow\n      </Link>\n    </nav>\n  )\n}\n\nexport default Navbar\n","import ky from 'ky'\nimport { useQuery } from 'react-query'\nimport { FormattedWar } from '../../../src/utils/format_war'\n\nconst getWars: () => Promise<FormattedWar[]> = async () =>\n  await ky.get('/api/wars').json()\n\nexport const useGetWars = () => {\n  return useQuery('wars', getWars)\n}\n","import { CubeTransparentIcon } from '@heroicons/react/solid'\nconst LoadingIcon = () => {\n  return <CubeTransparentIcon className='w-7 h-7 animate-spin' />\n}\n\nexport default LoadingIcon\n","export const dateToString = (date: Date) =>\n  isNaN(date.getTime())\n    ? ''\n    : `${date.getMonth() + 1}月${date.getDate()}日 ${String(\n        date.getHours()\n      ).padStart(2, '0')}:${String(date.getMinutes()).padStart(2, '0')}`\n","import { FC } from 'react'\nimport { Link } from 'react-router-dom'\nimport { FormattedWar } from '../../../src/utils/format_war'\nimport { dateToString } from '../utils/dateToString'\n\ninterface Props {\n  war: FormattedWar\n}\n\nconst War: FC<Props> = ({ war }) => {\n  return (\n    <Link\n      to={`/war/${war.id}`}\n      className='p-2 lg:p-4 space-y-2 border-2 border-gray-700 bg-gray-800 rounded-sm'>\n      <div className='space-y-1'>\n        <div className='flex items-baseline font-bold '>\n          <span className='mr-2'>vs</span>\n          <h2 className='text-2xl text-violet-500'>{war.opponent}</h2>\n        </div>{' '}\n        <div>{dateToString(new Date(war.spin_time))}</div>\n      </div>\n    </Link>\n  )\n}\n\nexport default War\n","import { useGetWars } from '../hooks/useGetWars'\nimport LoadingIcon from './LoadingIcon'\nimport WarCard from './WarCard'\n\ninterface Props {\n  showLoadingSpinner?: boolean\n  className?: string\n}\n\nconst WarList = ({ showLoadingSpinner = true, className }: Props) => {\n  const { data, isLoading } = useGetWars()\n\n  return (\n    <div className={'relative ' + className}>\n      {isLoading && showLoadingSpinner && (\n        <div className={'absolute inset-0 flex justify-center items-center'}>\n          <LoadingIcon />\n        </div>\n      )}\n      {!isLoading && data?.map(war => <WarCard key={war.id} war={war} />)}\n    </div>\n  )\n}\n\nexport default WarList\n","import { DocumentAddIcon } from '@heroicons/react/solid'\nimport { Link } from 'react-router-dom'\nimport WarList from '../components/WarList'\n\nconst Home = () => {\n  return (\n    <div className='grid p-5 lg:py-12 lg:px-16 gap-y-5'>\n      <h2 className='text-2xl lg:text-3xl mb-2 font-bold'>対戦一覧</h2>\n      <Link\n        to='/war/new'\n        className='flex items-center justify-center space-x-1 text-violet-200 w-min ml-auto lg:text-lg'>\n        <span className='whitespace-nowrap'>新規対戦</span>\n        <DocumentAddIcon className='w-5 h-5' />\n      </Link>\n      <WarList className='grid lg:grid-cols-2' />\n    </div>\n  )\n}\n\nexport default Home\n","import { ButtonHTMLAttributes, forwardRef } from 'react'\n\nconst SIZE_MAPS = {\n  lg: 'px-8 text-lg',\n  md: 'px-6 text-base',\n  sm: 'px-4 text-sm',\n}\n\nconst COLOR_MAPS = {\n  violet:\n    'bg-violet-700 hover:bg-violet-600 active:bg-violet-500 text-violet-100 ring-violet-400',\n  gray: 'bg-gray-700 hover:bg-gray-600 active:bg-gray-500 text-gray-100 ring-gray-400',\n  rose: 'bg-rose-700 hover:bg-rose-600 active:bg-rose-500 text-rose-100 ring-rose-400',\n}\n\ninterface Props\n  extends Omit<ButtonHTMLAttributes<HTMLButtonElement>, 'className'> {\n  size: keyof typeof SIZE_MAPS\n  color: keyof typeof COLOR_MAPS\n}\n\nconst Button = forwardRef<HTMLButtonElement, Props>((props, ref) => {\n  const { color, size, ...attrs } = props\n\n  return (\n    <button\n      {...attrs}\n      ref={ref}\n      className={`inline-flex items-center justify-center text-center whitespace-nowrap py-3 font-semibold rounded-md focus:outline-none focus:ring-2 space-x-1 ${SIZE_MAPS[size]} ${COLOR_MAPS[color]}`}>\n      {props.children}\n    </button>\n  )\n})\n\nexport default Button\n","import { InputHTMLAttributes } from 'react'\nimport { UseFormRegisterReturn } from 'react-hook-form'\n\ninterface Props extends InputHTMLAttributes<any> {\n  register: UseFormRegisterReturn\n}\n\nconst Input = ({ register, ...rest }: Props) => {\n  return (\n    <input\n      className='bg-gray-200 text-gray-900 max-w-2xl py-1 px-2 rounded-sm focus:outline-none focus:ring-2 focus:ring-violet-600'\n      {...register}\n      {...rest}\n    />\n  )\n}\n\nexport default Input\n","import { InputHTMLAttributes } from 'react'\nimport { UseFormRegisterReturn } from 'react-hook-form'\nimport Input from './Input'\n\ninterface Props extends InputHTMLAttributes<HTMLInputElement> {\n  label: string\n  currentValue: string\n  isEditMode: boolean\n  register: UseFormRegisterReturn\n}\n\nconst FormGroup = ({\n  isEditMode,\n  label,\n  currentValue,\n  register,\n  ...attrs\n}: Props) => {\n  return (\n    <div className='flex flex-col space-y-2'>\n      <label className='whitespace-nowrap'>{label}</label>\n      {isEditMode ? (\n        <Input {...attrs} register={register} />\n      ) : (\n        <span className='font-semibold text-2xl'>{currentValue}</span>\n      )}\n    </div>\n  )\n}\n\nexport default FormGroup\n","import { Disclosure } from '@headlessui/react'\nimport { ChevronUpIcon } from '@heroicons/react/solid'\nimport { ChangeEvent, useContext } from 'react'\nimport { Player } from '../../../src/utils/get_detailed_roaster'\nimport { context } from '../pages/war'\n\ninterface Props {\n  townHall: number\n  players: Player[]\n}\n\nexport const TH_COLORS: { [key: number]: string } = {\n  11: 'text-rose-300',\n  12: 'text-blue-300',\n  13: 'text-cyan-300',\n  14: 'text-yellow-300',\n}\n\nconst Players = ({ townHall, players }: Props) => {\n  const { isEditMode, roasterTags, setRoasterTags } = useContext(context)\n\n  const isInRoaster = (tag: string) => roasterTags?.includes(tag)\n\n  const selected = players.filter(p => isInRoaster(p.tag))\n\n  if (!isEditMode && selected.length === 0) return null\n\n  const onChange = (event: ChangeEvent<HTMLInputElement>) => {\n    const tag = event.target.value\n    setRoasterTags(prev => {\n      if (!prev) return prev\n      const next = [...prev]\n      if (isInRoaster(tag)) {\n        const idx = next.indexOf(tag)\n        next.splice(idx, 1)\n      } else {\n        next.push(tag)\n      }\n      return next\n    })\n  }\n\n  return (\n    <Disclosure>\n      {({ open }) => (\n        <>\n          <Disclosure.Button className='flex w-full max-w-2xl items-center py-2 px-4 rounded-md bg-gray-700 focus:outline-none focus:ring-1 focus:ring-violet-500 overflow-hidden'>\n            <span\n              className={`text-lg font-semibold ${\n                TH_COLORS[townHall] || 'text-gray-300'\n              }`}>\n              TH{townHall}\n            </span>\n            <span className='text-lg ml-1 letter'>({selected.length})</span>\n            <ChevronUpIcon\n              className={`${\n                open ? 'transform rotate-180' : ''\n              } w-5 h-5 ml-auto text-gray-300`}\n            />\n          </Disclosure.Button>\n          <Disclosure.Panel\n            as='ul'\n            className='my-2 px-5 divide-y-2 divide-gray-700'>\n            {players.map(\n              player =>\n                (isEditMode || isInRoaster(player.tag)) && (\n                  <li\n                    key={player.tag}\n                    className='flex justify-between items-center py-3'>\n                    {isEditMode ? (\n                      <>\n                        <label>{player.name}</label>\n                        <input\n                          className='text-violet-600 w-5 h-5 rounded-sm focus:outline-none focus:ring-2 focus:ring-violet-600 ml-2'\n                          type='checkbox'\n                          name={player.name}\n                          value={player.tag}\n                          checked={isInRoaster(player.tag)}\n                          onChange={onChange}\n                        />\n                      </>\n                    ) : (\n                      <span>{player.name}</span>\n                    )}\n                  </li>\n                )\n            )}\n          </Disclosure.Panel>\n        </>\n      )}\n    </Disclosure>\n  )\n}\n\nexport default Players\n","import { memo, useContext } from 'react'\nimport { RoasterType } from '../../../src/utils/get_detailed_roaster'\nimport { context } from '../pages/war'\nimport Players from './Players'\n\ninterface Props {\n  townHalls: number[]\n  roaster: RoasterType\n}\n\nconst Roaster = ({ townHalls, roaster }: Props) => {\n  const { roasterTags } = useContext(context)\n\n  return (\n    <div className='space-y-2'>\n      <label>参加メンバー</label>\n      <div className='text-violet-200 font-bold text-lg'>\n        計 {roasterTags?.length}\n      </div>\n      {townHalls.map(th => (\n        <Players key={th} townHall={th} players={roaster[th]} />\n      ))}\n    </div>\n  )\n}\n\nexport default memo(Roaster)\n","import { RoasterType } from '../../../src/utils/get_detailed_roaster'\nimport { TH_COLORS } from './Players'\n\ninterface Props {\n  roaster: RoasterType\n}\n\nconst RoasterText = ({ roaster }: Props) => {\n  return (\n    <p className='bg-gray-800 px-3 py-5 rounded w-full space-y-4'>\n      {Object.keys(roaster)\n        .map(key => parseInt(key))\n        .sort((a, b) => b - a)\n        .map(th => (\n          <div className='flex flex-col space-y-1'>\n            <span\n              className={`font-bold text-lg ${\n                TH_COLORS[th] || 'text-gray-300'\n              }`}>\n              TH{th}\n            </span>\n            {roaster[th].map(({ name }) => (\n              <span>{name}</span>\n            ))}\n          </div>\n        ))}\n    </p>\n  )\n}\n\nexport default RoasterText\n","import ky from 'ky'\nimport { useQuery } from 'react-query'\nimport { RoasterType } from '../../../src/utils/get_detailed_roaster'\n\nconst getPlayers: () => Promise<RoasterType> = async () =>\n  await ky.get('/api/players').json()\n\nexport const useGetPlayers = () => useQuery('players', getPlayers)\n","import ky from 'ky'\nimport { useQuery } from 'react-query'\nimport { FormattedWar } from '../../../src/utils/format_war'\n\nconst getWar: (id: string) => Promise<FormattedWar> = async (id: string) =>\n  await ky.get(`/api/war/${id}`).json()\n\nexport const useGetWar = (id: string) => useQuery(['war', id], () => getWar(id))\n","import { Dialog } from '@headlessui/react'\nimport { PencilIcon, TrashIcon } from '@heroicons/react/solid'\nimport ky from 'ky'\nimport {\n  createContext,\n  Dispatch,\n  SetStateAction,\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react'\nimport { useForm } from 'react-hook-form'\nimport { useHistory, useParams } from 'react-router-dom'\nimport { WarType } from '../../../src/main'\nimport { FormattedWar } from '../../../src/utils/format_war'\nimport { RoasterType } from '../../../src/utils/get_detailed_roaster'\nimport Button from '../components/Button'\nimport FormGroup from '../components/FormGroup'\nimport LoadingIcon from '../components/LoadingIcon'\nimport Roaster from '../components/Roaster'\nimport RoasterText from '../components/RoasterText'\nimport { useGetPlayers } from '../hooks/useGetPlayers'\nimport { useGetWar } from '../hooks/useGetWar'\nimport { dateToString } from '../utils/dateToString'\n\nexport interface FormData extends Omit<WarType, 'spin_time'> {\n  spin_time: string\n}\n\ntype RoasterTags = string[]\n\ninterface Context {\n  isEditMode: boolean\n  roasterTags: RoasterTags\n  setRoasterTags: Dispatch<SetStateAction<RoasterTags>>\n}\n\nconst currentDate = new Date().toISOString().split('.')[0].slice(0, -3)\n\nexport const context = createContext<Context>({\n  isEditMode: false,\n  roasterTags: [],\n  setRoasterTags: () => {},\n})\n\nconst War = () => {\n  const { id } = useParams<{ id: string }>()\n  const history = useHistory()\n  const war = useGetWar(id)\n  const players = useGetPlayers()\n  const { register, handleSubmit } = useForm<FormData>()\n\n  const [isEditMode, setIsEditMode] = useState(id === 'new')\n  const [isDialogOpen, setIsDialogOpen] = useState(false)\n  const [roasterTags, setRoasterTags] = useState<RoasterTags>(\n    war.data?.roaster || []\n  )\n\n  const cancelBtnRef = useRef<HTMLButtonElement>(null)\n\n  useEffect(() => {\n    setRoasterTags(war.data?.roaster || [])\n  }, [war.data?.roaster])\n\n  const isLoading = war.isLoading || players.isLoading\n\n  const onSubmit = useCallback(\n    async (values: FormData) => {\n      const spin_time = values.spin_time || war.data?.spin_time\n\n      if (!spin_time) {\n        alert('マッチング時間を入力してください')\n        return\n      }\n\n      const data: Omit<FormattedWar, 'id'> = {\n        ...values,\n        roaster: roasterTags,\n        spin_time,\n      }\n\n      if (war.data?.id) {\n        await ky.put(`/api/war/${war.data?.id}`, { json: data })\n      } else {\n        await ky.post('/api/war', { json: data })\n      }\n      history.go(0)\n    },\n    [roasterTags, war.data?.spin_time, war.data?.id, history]\n  )\n\n  const townHalls = useMemo(\n    () =>\n      players.data\n        ? Object.keys(players.data)\n            .map(th => parseInt(th))\n            .sort((a, b) => b - a)\n        : [],\n    [players.data]\n  )\n\n  const deleteWar = useCallback(async () => {\n    await ky.delete(`/api/war/${war.data?.id}`)\n    history.push('/')\n  }, [war.data?.id, history])\n\n  return (\n    <div className='p-5 lg:py-12 lg:px-16 relative'>\n      {isLoading && (\n        <div className={'absolute inset-0 flex justify-center items-center'}>\n          <LoadingIcon />\n        </div>\n      )}\n      {!isLoading && war.isError && id !== 'new' && <div>無効なID</div>}\n      {!isLoading && war.data && players.data && (\n        <context.Provider value={{ isEditMode, roasterTags, setRoasterTags }}>\n          <div className='grid gap-y-10 lg:grid-cols-2 lg:gap-y-0 lg:gap-x-16'>\n            <div className='flex flex-col justify-center'>\n              <div className='flex mb-5 ml-auto space-x-3 justify-end'>\n                {id !== 'new' && (\n                  <Button\n                    onClick={() => setIsDialogOpen(true)}\n                    color='rose'\n                    size='md'>\n                    <span className='whitespace-nowrap'>削除</span>\n                    <TrashIcon className='w-5 h-5' />\n                  </Button>\n                )}\n                <Button\n                  onClick={() => setIsEditMode(prev => !prev)}\n                  color={isEditMode ? 'violet' : 'gray'}\n                  size='md'>\n                  <span className='whitespace-nowrap'>編集</span>\n                  <PencilIcon className='w-5 h-5' />\n                </Button>\n              </div>\n\n              <Dialog\n                open={isDialogOpen}\n                onClose={() => setIsDialogOpen(false)}\n                initialFocus={cancelBtnRef}\n                className='fixed z-10 inset-0 flex items-center justify-center'>\n                <Dialog.Overlay className='fixed inset-0 opacity-50 bg-gray-900' />\n                <div className='bg-rose-200 z-10 grid p-5 rounded-md items-center justify-center gap-y-2'>\n                  <Dialog.Title className='flex-grow text-rose-800 text-center'>\n                    本当に削除しますか？\n                  </Dialog.Title>\n                  <div className='flex space-x-3'>\n                    <Button onClick={deleteWar} color='rose' size='lg'>\n                      はい\n                    </Button>\n                    <Button\n                      onClick={() => setIsDialogOpen(false)}\n                      ref={cancelBtnRef}\n                      color='gray'\n                      size='md'>\n                      キャンセル\n                    </Button>\n                  </div>\n                </div>\n              </Dialog>\n\n              <form\n                onSubmit={handleSubmit(onSubmit)}\n                className='flex lg:block flex-col space-y-5 lg:space-y-8'>\n                <FormGroup\n                  label='対戦相手'\n                  type='text'\n                  isEditMode={isEditMode}\n                  register={register('opponent')}\n                  defaultValue={war.data.opponent}\n                  currentValue={war.data.opponent}\n                  required={true}\n                />\n\n                <FormGroup\n                  label='マッチング時間'\n                  type='datetime-local'\n                  isEditMode={isEditMode}\n                  register={register('spin_time')}\n                  currentValue={dateToString(new Date(war.data.spin_time))}\n                  min={currentDate}\n                  required={false}\n                />\n\n                <Roaster townHalls={townHalls} roaster={players.data} />\n\n                {isEditMode && (\n                  <Button color='violet' size='lg' type='submit'>\n                    保存\n                  </Button>\n                )}\n              </form>\n            </div>\n            <RoasterText\n              roaster={Object.keys(players.data).reduce((obj, th) => {\n                const playerDetails = players.data[th].filter(player =>\n                  roasterTags.includes(player.tag)\n                )\n                if (playerDetails.length === 0) return obj\n\n                obj[th] = playerDetails\n\n                return obj\n              }, {} as RoasterType)}\n            />\n          </div>\n        </context.Provider>\n      )}\n    </div>\n  )\n}\n\nexport default War\n","import { QueryClient, QueryClientProvider } from 'react-query'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport Navbar from './components/Navbar'\nimport Home from './pages/home'\nimport War from './pages/war'\n\nconst client = new QueryClient()\n\nconst App = () => {\n  return (\n    <QueryClientProvider client={client}>\n      <Router>\n        <Navbar />\n        <Switch>\n          <Route exact path='/'>\n            <Home />\n          </Route>\n          <Route exact path='/war/:id'>\n            <War />\n          </Route>\n        </Switch>\n      </Router>\n    </QueryClientProvider>\n  )\n}\n\nexport default App\n","import { StrictMode } from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}